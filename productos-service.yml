server:
  port: 8100

spring:
  datasource:
    url: jdbc:sqlserver://netcompany.database.windows.net:1433;database=DB_Productos;encrypt=true;trustServerCertificate=false;loginTimeout=30;
    username: netcompany
    # Â¡CONTRASEÃ‘A ELIMINADA! Se inyecta desde docker-compose.yml como DB_PASSWORD
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.SQLServerDialect

  hikari:
    maximum-pool-size: 10
    minimum-idle: 2
    idle-timeout: 30000
    connection-timeout: 30000
    pool-name: HikariPool-NetShop

  rabbitmq:
    # Estas credenciales pueden quedar aquÃ­ o ser variables de entorno si quieres mÃ¡s control
    host: rabbitmq # Usa el nombre del servicio de Docker Compose aquÃ­
    port: 5672
    username: guest
    password: guest

# ConfiguraciÃ³n de Eureka
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
    register-with-eureka: true
    fetch-registry: true


# ðŸ§© Variables personalizadas para tus colas y bindings de RabbitMQ
rabbitmq:
  exchange: netshop.exchange
  queue:
    ventas: netshop.ventas.queue
    productos: netshop.productos.queue
  routing:
    ventas: ventas.creada
    productos: productos.actualizado
# api-gateway.yml (EN TU REPOSITORIO GIT DEL CONFIG SERVER)
server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Productos
        - id: productos-service-direct
          uri: http://productos-service:8100
          predicates:
            - Path=/api/productos/**
          filters:
            - StripPrefix=1

        # Categorias
        - id: productos-service-direct
          uri: http://productos-service:8100
          predicates:
            - Path=/api/categorias/**
          filters:
            - StripPrefix=1

        # Identity - Autenticación manual (registro, login)
        - id: identity-service
          uri: lb://identity-service
          predicates:
            - Path=/auth/**
            - Path=/oauth2/**
            - Path=/login/oauth2/code/** # Esta es la ruta para la redirección de Google
          filters:
            - StripPrefix=0 # Crucial para OAuth2

        # ¡NUEVA RUTA PARA INICIAR EL FLUJO DE GOOGLE OAUTH2!
        - id: google-oauth2-init
          uri: lb://IDENTITY-SERVICE
          predicates:
            - Path=/oauth2/authorization/google
          filters:
            - StripPrefix=0 # <--- ¡AGREGADO! Pasa la ruta tal cual

        # ¡NUEVA RUTA PARA EL CALLBACK DE GOOGLE OAUTH2!
        - id: google-oauth2-callback
          uri: lb://IDENTITY-SERVICE
          predicates:
            - Path=/login/oauth2/code/google
          filters:
            - StripPrefix=0 # <--- ¡AGREGADO! Pasa la ruta tal cual

        # Perfiles de Usuario
        - id: perfiles-usuario-service
          uri: lb://USUARIO-SERVICE
          predicates:
            - Path=/api/perfiles-usuario/**
          filters:
            - StripPrefix=1

        # Ventas Service
        - id: ventas-service
          uri: lb://VENTAS-SERVICE
          predicates:
            - Path=/api/ventas/**
          filters:
            - StripPrefix=1

#jwt: # Mantén esto comentado si lo inyectas vía Docker Compose
#  secret: "${JWT_SECRET}"
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
    register-with-eureka: true
    fetch-registry: true